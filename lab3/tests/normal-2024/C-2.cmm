int min(int a, int b) {
  if (a <= b)
    return a;
  else
    return b;
}

int fibMonaccianSearch() {
  int arr[16];
  int x;
  int i = 0;
  int n = 16;
  int offset = -1;

  int fibMMm2 = 0;
  int fibMMm1 = 1;
  int fibM = fibMMm2 + fibMMm1;

  while (i < 16) {
    arr[i] = read();
    i = i + 1;
  }
  x = read();

  while (fibM < n) {
    fibMMm2 = fibMMm1;
    fibMMm1 = fibM;
    fibM = fibMMm2 + fibMMm1;
  }

  while (fibM > 1) {
    i = min(offset + fibMMm2, n - 1);

    if (arr[i] < x) {
      fibM = fibMMm1;
      fibMMm1 = fibMMm2;
      fibMMm2 = fibM - fibMMm1;
      offset = i;
    }

    else if (arr[i] > x) {
      fibM = fibMMm2;
      fibMMm1 = fibMMm1 - fibMMm2;
      fibMMm2 = fibM - fibMMm1;
    }

    else
      return i;
  }

  if (fibMMm1 && arr[offset + 1] == x)
    return offset + 1;

  return -1;
}

int main() {
  write(fibMonaccianSearch());
  return 0;
}