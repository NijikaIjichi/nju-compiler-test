struct Car {
  int loc_x;
  int loc_y;
  int speed;
};

struct Street {
  int distanceSum;
  int speedAverage;
  struct Car cars[3];
};


int distance(struct Car car1, struct Car car2){
  int dis_x = 0;
  int dis_y = 0;
  if(car1.loc_x > car2.loc_x){
    dis_x = car1.loc_x - car2.loc_x;
  }
  else{
    dis_x = car2.loc_x - car1.loc_x;
  }

  if(car1.loc_y > car2.loc_y){
    dis_y = car1.loc_y - car2.loc_y;
  }
  else{
    dis_y = car2.loc_y - car1.loc_y;
  }
  return dis_x + dis_y;
}

int sum_distance(struct Street street2){
  int sum = 0;
  sum = sum + distance(street2.cars[0], street2.cars[1]);
  sum = sum + distance(street2.cars[1], street2.cars[2]);
  sum = sum + distance(street2.cars[2], street2.cars[0]);
  return sum;
}

int ave_speed(struct Car car3, struct Car car4, struct Car car5){
  return (car3.speed + car4.speed + car5.speed) / 3;
}

int initStreet(struct Street street1){
  int index = 0;
  street1.distanceSum = 0;
  street1.speedAverage = 0;
  while(index < 3){
    street1.cars[index].loc_x = 30 * index + 10;
    street1.cars[index].loc_y = 20 * (index + 1) - 15;
    street1.cars[index].speed = (index + 1) * 100 - 50;
    index = index + 1;
  }
  return 0;
}

int main(){
  struct Street myStreet;
  initStreet(myStreet);
  write(sum_distance(myStreet));
  write(ave_speed(myStreet.cars[0], myStreet.cars[1], myStreet.cars[2]));
  return 0;
}